1.客户端安装命令：
brew install git（mac）//需要先下载安装Homebrew，也可直接去git官网下载：https://git-scm.com/download
yum install -y git（linux）  //需要先下载安装yum

2.安装版本查询
git -version


3.注册github账号：https://github.com/


4.客户端配置sshkey，配置完成每次使用git就不用输入用户名密码了
生成key: 根目录下运行：ssh-keygen -t rsa -C "邮箱地址"，然后不填任何内容，一路按回车直到生成成功；
cd ~/.ssh(用户目录下的.ssh文件夹)；
复制该文件夹下的id_rsa.pub的公钥内容到github网站（settings->SSH and GPG keys->SSH keys）中；

/*
cd ~/.ssh 下配置config文件：
Host github.com
HostName github.com
User weiyiweiyiweiyi
IdentityFile /home/lubin/.ssh/id_rsa_hub

Host gitlib.com
HostName gitlib.com
User weiyiweiyiweiyi
IdentityFile /home/lubin/.ssh/id_rsa_lib
*/


5.github官网创建仓库，直接将远端仓库克隆到本地(可以不做这一步，直接做下一步然后关联这一步的远程仓库)
git clone git@github.com:weiyiweiyiweiyi/TestProject.git



6.创建本地文件，本地分支，将文件和分支提交到本地仓库，推到远端
1.在一个新机器上初始化创建仓库并且关联远端的项目（会拉取远端的所有内容到本地）：
       a.先在本地文件夹下git init 初始化一个仓库；
       b.本地仓库设置关联远程仓库：git remote add 远程仓库名字(自己取的) 远程仓库地址；  ps:git remote -v 显示所有远程仓库
       c.将远程主机的更新全部取回本地仓库：git fetch 远程仓库名字；
       d.将远端分支的内容拉到本地对应分支：git checkout -b 本地分支名 远程仓库名字/远端分支名

2.在一个新机器上初始化创建仓库并且关联远端的项目（不用拉取远端的所有内容到本地）：
       a.先在本地文件夹下git init 初始化一个仓库；
       b.本地仓库设置关联远程仓库：git remote add 远程仓库名字(自己取的) 远程仓库地址；  ps:git remote -v 显示所有远程仓库
       c.本地创建一个新的分支可以加上文件，然后推到远端：git push --set-upstream weiyi_github test
       
       

git add 文件名	//添加到本地暂存区	
git rm 文件名	//从暂存区删除
git commit -m"XXX" 	//提交到本地仓库
git push 	//将提交到本地仓库的内容提交到远端仓库


7.查看，新建、删除分支
git branch   	//查看本地分支
git branch 分支名 	//创建本地分支
git branch -a   	//查看本地和远端分支
git checkout 分支名	//切换分支
git branch -d 分支名	//删除本地分支
git push origin --delete 分支名	 //删除远端分支 


8.合并分支
git merge 分支名  //将分支名的内容合并到当前分支

9.查看提交的版本号，并且回退到指定的版本
git reflog	//查看提交的版本
git reset --hard 版本号  //回到相应的版本


10.从远端分支拉内容覆盖当前的本地分支
git pull


11.丢弃本地修改
git checkout -f


